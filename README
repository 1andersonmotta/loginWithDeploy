## aplicação com crud e login
## How to run

1. Rode o comando: npm install
2. Abra o Docker:
3. Crie um Container Postgres:

4. criando container docker com postgress execute: docker pull postgres

5. para confirmar se a imagem foi criada execute: docker images

agora rode e configure as variaveis execute: docker run -p 5432:5432 -e POSTGRES_PASSWORD=1234 postgres

#temos nosso banco rodando, o problema é que por padrão,
#todos os dados são armazenados internamente dentro do container,
#e quando paramos ele, perdemos tudo. Para que possamos gravar os dados permanente,
#utilizaremos os volumes do docker, iremos definir uma pasta da máquina que será
#responsável pelo armazenamento, no meu caso, criei uma pasta com o nome database no
#diretório “/tmp/database”. Feito isto, vamos mapear a pasta de armazenamento dentro
#do container, para nossa pasta que criamos

# docker run -p 5432:5432 -v /tmp/database:/var/lib/postgresql/data -e POSTGRES_PASSWORD=1234 postgres

6. Rode o comando para subir a aplicação: npm run dev

7. Testando as rotas com Insomnia ou Postman:

CRIANDO USUÁRIO:
crie um metodo no insomnia POST com a url: http://localhost:3333/users
crie no body um JSON ex:

#       {
#        "nome": "nome",
#        "email": "email@email.com",
#        "bairro": "",
#        "CEP": "1988797",
#        "CNPJ": "15311755000184",
#        "complemento": "compl",
#        "endereco": "end",
#        "incricaoEstadual": "insc",
#        "incricaoMunicipal": "muni",
#        "nomeFantasia": "fant",
#        "numero": "151",
#        "password":"#3Aa1234a",
#        "razaoSocial": "social",
#        "telefone": "tel",
#        "tipo": "CLIENTE"
#        }

#---------------------------------------------------
FAZENDO LOGIN:
crie um metodo no insomnia POST com a url e passando no ultimo parametro o email ou cnpj: http://localhost:3333/users/login/SEU EMAIL OU CNPJ AQUI
crie no body um JSON com password ex:

#   {
#   "password":"#3Aa1234a"
#   }

#---------------------------------------------------
RESETANDO SENHA ENVIANDO EMAIL:
crie um metodo no insomnia POST com url: http://localhost:3333/users/resetpassword
crie no body um JSON confirmando o email ex:
#   {
#   "email":"email@email.com"
#   }

#---------------------------------------------------
PEGANDO TODOS USUÁRIOS - FUNÇÃO ADMINISTRADOR:
crie um metodo no insomnia GET com a url: http://localhost:3333/users

#--------------------------------------------------
DELETANDO USUÁRIO - FUNÇÃO ADMINISTRADOR:
crie um metodo no insomnia DELETE  e passe o ID no Final com a url:
  http://localhost:3333/users/delete/login/ID AQUI

  ## Dependencias
#  Docker
#  Node version 16.13.1
